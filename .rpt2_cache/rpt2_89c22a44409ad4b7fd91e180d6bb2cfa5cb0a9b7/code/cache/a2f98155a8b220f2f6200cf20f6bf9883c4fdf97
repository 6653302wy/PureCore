{
  "code": "export default class Dictionary {\r\n    constructor() {\r\n        this._keys = [];\r\n        this._values = [];\r\n    }\r\n    set(key, value) {\r\n        let index = this.indexOf(key);\r\n        if (index >= 0) {\r\n            this._values[index] = value;\r\n            return;\r\n        }\r\n        this._keys.push(key);\r\n        this._values.push(value);\r\n    }\r\n    get(key) {\r\n        let index = this.indexOf(key);\r\n        return index < 0 ? null : this._values[index];\r\n    }\r\n    remove(key) {\r\n        let index = this.indexOf(key);\r\n        if (index >= 0) {\r\n            this._keys.splice(index, 1);\r\n            this._values.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    clear() {\r\n        this._values.length = 0;\r\n        this._keys.length = 0;\r\n    }\r\n    get values() {\r\n        return this._values;\r\n    }\r\n    get keys() {\r\n        return this._keys;\r\n    }\r\n    indexOf(key) {\r\n        let index = this._keys.indexOf(key);\r\n        if (index >= 0)\r\n            return index;\r\n        key = ((typeof key == 'string')) ? Number(key) : (((typeof key == 'number')) ? key.toString() : key);\r\n        return this._keys.indexOf(key);\r\n    }\r\n}\r\n",
  "references": []
}
